<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-24T16:05:28.996Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8月24日学习总结</title>
    <link href="http://example.com/2021/08/24/8%E6%9C%8824%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/24/8%E6%9C%8824%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-24T14:01:00.000Z</published>
    <updated>2021-08-24T16:05:28.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><span id="more"></span><h2 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h2><p>矩阵练习</p><ol><li>矩阵乘法有分配律，结合律，一般情况不满足交换律！！！</li><li>当X=A^-1*B时，将A与B拼接，（A|B），将左边 行列式化成标准式，右边行列式即为X</li><li>当拼接行列式（A|B）时，AB同一行提取公因式或者同时乘以相同数时不用提取到矩阵外部，只管凑数即可。需要注意的是左边矩阵行乘除后右边矩阵相同行也要相同操作！行列式计算值可以行列互换，矩阵计算时只能行互换。</li></ol><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>翻译课文<br>disregard,enviable,character,favour,lobby,intrude,intrusion,meadow,critical<br>infrastructure,struck,explict,endorse,leisure,rate(认为),poll(民意调查)</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><p>复习了计算机组成原理的总线部分，为了使设备增减外部设备变得容易，采取了总线结构，分时共享是总线的两个特点。分时是指同一时刻只能允许一个部件使用总线，所以要分时使用；共享是一条总线共享给多个设备使用、接受。<br>还学习了总线的分类，比较重要的是按照传送方式分类：并行传输总线（多根线多位传输）、串行传输总线（单线单位传输）。按连接部件可以划分为：片内总线、系统总线、通信总线。片内总线顾名思义是芯片内部的总线。系统总线比较重要，包含数据总线（传递各功能部件的信息，包括指令，操作数，中断类信号【多考！】，I/O接口的命令字状态字。是双向传输总线），地址总线（传输地址，单向传输总线），控制总线（传输各种控制信号）。<br>几个重要概念：总线宽度：指总线有多少根，一根1bit!!!总线带宽：一秒单位时间内可以传输数据的位数【常考】，总线复用：地址总线和数据总线公用一组线。信号线数：三类系统总线数量之和。<br>总线结构：单总线结构（CPU,主存，I/O设备全在一条总线上）逻辑简单，但是由于I/O速率与主存速率不匹配，降低效率。双总线结构（将I/O设备从总线上剥离出来，形成主存总线与I/O总线分离），每次主存与I/O设备交换数据都要通过CPU，CPU干预程度高。三总线结构(加入DMA总线，I/O总线可与主存直接交换数据)减少了CPU的干预。【参照操作系统I/O控制方式】<br>总线的操作与定时：同步定时方式与异步定时方式。<br>同步：采用统一时钟信号来协调发送和接受双方的传送定时。传输周期：一、发出地址信息二、发出读命令三、提取数据四、撤销读命令。输出周期：一、发出地址信息二、提取数据三、发出写命令四、撤销写命令。优点：传输速度快，但是统一时钟要按照最慢的模块设置时钟，损失效率。<br>异步：主模块：发送请求的模块（发送方）。从模块：接受请求模块（接收方）。不互锁方式：主模块不等从模块应答，从模块不等主模块回复，都默认对方已经成功收到信息。半互锁方式：主模块向从模块发起请求后，必须等待从模块回复“已经收到”，后直接开始通信。全互锁方式：主模块向从模块发起请求后，从模块回复主模块“我已成功收到”，主模块再次向从模块回复（回复从模块的回复）“好的，我收到你的回复，我要开始通信了”，随后开始通信，类似于TCP的三次握手。异步通信可用于并行或串行传输！<br>总线标准：系统总线标准：ISA（工业标准体系结构总线），EISA（ISA的拓展），VESA（多媒体屏幕VESA接口），PCI（硬盘，即插即用），PCI-E（最新总线接口标准）。设备总线标准：IDE(一种IDE接口磁盘接口类型)，AGP(加速图形接口)，USB（实现外设的快速连接，是串行总线！！！），SATA（串行，硬盘接口）</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;</summary>
    
    
    
    <category term="每日学习总结" scheme="http://example.com/categories/%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>8月23日学习总结</title>
    <link href="http://example.com/2021/08/23/8%E6%9C%8823%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/23/8%E6%9C%8823%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-23T14:19:41.000Z</published>
    <updated>2021-08-23T15:53:16.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><span id="more"></span><h2 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h2><p>线性代数矩阵刷选择题</p><ol><li>矩阵乘法不能交换次序</li><li>矩阵若秩不满，则行列式等于0；反之，若满秩，则行列式不等于0</li></ol><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>翻译英语课文一篇，总结单词与翻译语法<br>notion,elevate,compliance,revise,sanction,adornment,inherent,intangible,hint,arbiter,tape,uplifting,incite,parliament</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><p>学习了TCP协议的连接控制：建立连接（三次握手），释放连接（四次握手）。TCP的流量管理（ack,rwnd剩余可以接收的大小,以此来限制发送方不要发送而太快），拥塞管理（慢开始，快重传，快恢复）</p><ol><li><p>三次握手：第一次发送方申请建立连接，SYN=1，seq=x;第二次接收方向发送方发送确认申请连接，SYN=1，ACK=1,seq=y,ack=x+1(确认收到x号请求，并且期望收到序号为x+1的字段)；第三次发送方确认接收方的确认报文，ACK=1，seq=x+1,ack=y+1(确认收到y号字段请求，并且期望收到序号为y+1的字段)<br>为什么是三次：两次握手的话当接收方向发送发发送确认报文，如果途中第二个报文丢失，接收方已经准备可以接受，但是发送方却不知道接收方可以接受，故一直等待不能开始发送。通俗来讲，就是要发送方向接收方申请建立连接，接收方告诉发送方我可以开始接受，然后发送方再一次告诉接收方我要开始发送了，共三次“握手”。</p></li><li><p>四次握手：发送方向接收方发送信息：我已经发送完了（FIN=1，ack=u）,接收方收到消息，告诉发送方收到（ACK=1，ack=u+1），此时发送方的连接可以断开。等待接收方向发送方发送完数据之后，向发送方发送结束报文，告诉发送方我已经把数据发送完了（FIN=1,ack依然是u+1），发送方收到后，等待2MSL，向接收方发送确认报文：我已收到。此时双方的连接完全结束。</p></li><li><p>流量管理：ARQ，停止等待协议，选择重传协议…与之前数据链路层所学的知识相差无异。（累计确认等等名词需要好好复习巩固）</p></li><li><p>拥塞控制：发送窗口，拥塞窗口，网络拥塞阈值<br>慢开始：初始发送窗口大小为1，当发送文件数小于等于阈值时，每接收到一批发送的所有确认报文后，发送窗口大小*2；以此反复，直到发送文件数到达阈值，开始每次确认发送完一批，发送窗口大小执行加法，每次增加一个大小。当网络开始拥塞时，发送窗口重新设置为1，阈值大小减小一半，然后重新开始计算。没到阈值窗口大小 *2，到达阈值后窗口大小每次加1.</p></li></ol><p>快重传：当发送方连续三次收到同一个确认报文时，直接开始重传，而不用等待重传计时器，从而达到“快”的重传效率。</p><p>快恢复：与慢开始一致，但是当网络拥塞时，发送窗口大小不降为1，而是降到阈值1/2后的位置，然后每一次接收后窗口大小加1,意味快速“恢复”。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;</summary>
    
    
    
    <category term="每日学习总结" scheme="http://example.com/categories/%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>8月22日学习总结</title>
    <link href="http://example.com/2021/08/22/8%E6%9C%8822%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/22/8%E6%9C%8822%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-22T14:30:59.000Z</published>
    <updated>2021-08-22T15:05:32.715Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><h2 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h2><p>学习了联系与发展的概念，原因与结果，必然与偶然</p><span id="more"></span><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>翻译了一篇课文，积累了单词与翻译逻辑<br>复习的单词有：<br>leading,benefactor,prominent,presuppose,literature,craft,coherent,curricula,deprive,portray,setback,obstruct,obscure</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><p>学习了计算机网络，开始复习传输层，学习了UDP与TCP的概念<br>传输层是为了实现应用进程之间提供服务<br>udp是面向无连接，不可靠的传输；TCP是面向连接，可靠的传输<br>学习了TCP的报文段的首部结构，各字段的含义</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;&lt;h2 id=&quot;政治&quot;&gt;&lt;a href=&quot;#政治&quot; class=&quot;headerlink&quot; title=&quot;政治&quot;&gt;&lt;/a&gt;政治&lt;/h2&gt;&lt;p&gt;学习了联系与发展的概念，原因与结果，必然与偶然&lt;/p&gt;</summary>
    
    
    
    <category term="每日学习总结" scheme="http://example.com/categories/%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>博客功能熟悉完善</title>
    <link href="http://example.com/2021/08/22/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E7%86%9F%E6%82%89%E5%AE%8C%E5%96%84/"/>
    <id>http://example.com/2021/08/22/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E7%86%9F%E6%82%89%E5%AE%8C%E5%96%84/</id>
    <published>2021-08-21T16:43:03.000Z</published>
    <updated>2021-08-22T15:06:36.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h2><p>一开始不知道如何使用博客的TAG与CATE功能<span id="more"></span>,不知道怎么打开文件的TAG与CATE然后放到左侧导航栏中。最初以为是_config文件中没有打开设置，后来发现原来只要在post的文件头中加入字段tag与categories，后面自定义输入内容就可以放入左侧的导航栏中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 博客功能熟悉完善</span><br><span class="line">date: 2021-08-22 00:43:03</span><br><span class="line">tags: 技术</span><br><span class="line">categories: blog</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;完善&quot;&gt;&lt;a href=&quot;#完善&quot; class=&quot;headerlink&quot; title=&quot;完善&quot;&gt;&lt;/a&gt;完善&lt;/h2&gt;&lt;p&gt;一开始不知道如何使用博客的TAG与CATE功能</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="导航栏" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>8月21日学习总结</title>
    <link href="http://example.com/2021/08/22/8%E6%9C%8821%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/22/8%E6%9C%8821%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-21T16:08:24.000Z</published>
    <updated>2021-08-22T14:30:28.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><h2 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h2><span id="more"></span><p>对矩阵逆矩阵的求法，抽象矩阵算式的计算与推导进行了题目练习，并且对举证的秩有了一定复习。秩是矩阵以及后面的重点，必须要以理解与练习结合。</p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>翻译了两篇课文，难度不大，主要是熟悉语法还有单词。</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><p>复习了数据结构的图的存储表：邻接表法和十字链表法，了解了其原理。然后复习了图的最小生成图的普利姆算法以及克鲁斯卡尔算法，可以对其进行手工绘制最小生成图。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;&lt;h2 id=&quot;高数&quot;&gt;&lt;a href=&quot;#高数&quot; class=&quot;headerlink&quot; title=&quot;高数&quot;&gt;&lt;/a&gt;高数&lt;/h2&gt;</summary>
    
    
    
    <category term="每日学习总结" scheme="http://example.com/categories/%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>8月20日学习总结</title>
    <link href="http://example.com/2021/08/21/8%E6%9C%8820%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/21/8%E6%9C%8820%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-20T16:19:20.000Z</published>
    <updated>2021-08-22T13:46:19.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><h3 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h3><span id="more"></span><p>复习了行列式以及矩阵逆矩阵的定义以及计算，熟悉了行列式各种形式的计算方法，还有矩阵逆矩阵的求法。<br>矩阵开始就会有很多的公式需要记忆，重点是围绕逆矩阵展开，例如求逆矩阵可以使用“伴随矩阵法“、”初等变换矩阵法“，然后伴随矩阵和矩阵以及矩阵的逆矩阵还有矩阵的行列式有大量的公式和定理定义。如：一个数乘上一个n阶矩阵等于一个数的n次方乘以他的行列式，<code>A*/|A|=A^-1</code>(很重要)等等。都需要练习还有背诵去加深印象。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>今天翻译了一篇文章，虽然文章不难，但是搞懂了所有单词意思，能够翻译出全文的大致意思。<br>重点单词：<br>entile、instinct、zeal、subsidise、indulgent、preside、prescription、prescribe、negligible、initiate、ingenious、eligible</p><p>单词不多，也不难，但都是基础单词，需要记忆</p><h3 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h3><p>今天学习了操作系统的I/O系统，I/O设备的分类，依靠各种特性的分类，I/O控制器的组成还有原理，纯记忆还有理解背诵即可。<br>还有I/O系统的控制方式，比较重要。</p><ol><li>程序直接控制方式：CPU发出一条I/O指令后，等待该条指令完成后再执行其他操作，以单个字为操作单位，CPU干预程度极高，且大部分时间处在忙等状态，效率极低。</li><li>中断驱动方式：与上面不同的是，引入了中断机制，发出I/O指令后可以去干其他事，等到完成后会向CPU发出中断指令，但还是以单个字为操作对象，干预程度也很高。</li><li>DMA：加入DMA控制器，CPU只需要将本次I/O要干的事一件一件告诉DMA控制器（本质是将信息放入DMA中的寄存器中）,然后CPU就可以去干其他事了，等待完成后，会向CPU发出中断，CPU干预程度又一次下降，并且可以一次性读多个字，以块为单位与CPU交换数据。</li><li>通道控制：通道就是一个低配版CPU，但是还是要与CPU共享内存。当CPU要执行I/O操作时，只需要从内存中调出通道程序，通道程序会去让通道完成所有的I/O操作，CPU就更少干预了，并且可以以一组块为交换单位，效率更高。</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>今天中午出去陪家人吃了饭，导致下午效率有点低哈哈哈，明天继续努力啊，不管是学习考研还是学习专业知识，都不要浪费自己的时间，将时间有意义化，毕竟我的差距和别人拉开的太大了，加油吧。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;&lt;h3 id=&quot;高数&quot;&gt;&lt;a href=&quot;#高数&quot; class=&quot;headerlink&quot; title=&quot;高数&quot;&gt;&lt;/a&gt;高数&lt;/h3&gt;</summary>
    
    
    
    <category term="每日学习总结" scheme="http://example.com/categories/%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>学习Markdown语法的练习博客</title>
    <link href="http://example.com/2021/08/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2021/08/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</id>
    <published>2021-08-19T15:07:09.000Z</published>
    <updated>2021-08-21T14:57:10.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、一级大标题的使用"><a href="#一、一级大标题的使用" class="headerlink" title="一、一级大标题的使用"></a>一、一级大标题的使用</h2><p>标题是比较常用的到的格式，只需要在标题前加上一个‘#’即可</p><span id="more"></span><hr><h2 id="二、字体加粗"><a href="#二、字体加粗" class="headerlink" title="二、字体加粗"></a>二、字体加粗</h2><p>在需要加粗的字体前后加上就像这样</p><hr><h2 id="三、代码块的使用"><a href="#三、代码块的使用" class="headerlink" title="三、代码块的使用"></a>三、代码块的使用</h2><p>在代码前后加上```就可以实现代码块；如果不适用代码块，直接贴代码就有如下的效果<br>#include &lt;stdio.h&gt;</p><p>int main()<br>{<br>    /* 我的第一个 C 程序 */<br>    printf(“Hello, World! \n”);<br>    return 0;<br>}<br>但是如果使用代码块，就能将代码标亮并且有行数提示，更加美观，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    /* 我的第一个 C 程序 */</span><br><span class="line">    printf(“Hello, World! \n”);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是行内代码块：用单个`表示<br><code>printf(“Hello, World! \n”);</code></p><hr><h2 id="四、文字引用"><a href="#四、文字引用" class="headerlink" title="四、文字引用"></a>四、文字引用</h2><p>分层结构可以使文字结构更加清晰明了</p><blockquote><p>我是一层</p><blockquote><p>我是二层<br>就算这里继续使用一个箭头还是无法跳出第二层的</p><blockquote><p>我是第三层</p></blockquote></blockquote></blockquote><blockquote><p>空一行就可以跳出之前的层数</p></blockquote><hr><h2 id="五、表格"><a href="#五、表格" class="headerlink" title="五、表格"></a>五、表格</h2><p>第二行的符号-表示对齐方式,-表示默认，-–:表示右对齐，\：—表示左对齐.注意表格前一定要空行！！！不然无法识别</p><table><thead><tr><th>商品</th><th align="right">数量</th><th align="center">单价</th></tr></thead><tbody><tr><td>苹果</td><td align="right">10</td><td align="center">$1</td></tr><tr><td>电脑</td><td align="right">1</td><td align="center">$1000</td></tr></tbody></table><hr><h2 id="六、有序列表"><a href="#六、有序列表" class="headerlink" title="六、有序列表"></a>六、有序列表</h2><p>在数字.后面加上空格既可以生成有序列表</p><hr><h2 id="N、总结（FOR-NOW…）"><a href="#N、总结（FOR-NOW…）" class="headerlink" title="N、总结（FOR NOW…）"></a>N、总结（FOR NOW…）</h2><p>还有很多Markdown语法，但是由于学习时间有限，先学习到这里，等后续继续学习了还会在这里补充。<br>现在对今天所学进行总结：</p><ol><li>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式，可以很容易转化成 HTML 或者 PDF！</li><li>很多格式后面要注意空格空行，不然无法识别出来，如##、以及有序列表（空格），分割线—（空行）</li><li>如果你想在文字中加入一些语法符号，可以写在前面加上\，即可转义****</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;一、一级大标题的使用&quot;&gt;&lt;a href=&quot;#一、一级大标题的使用&quot; class=&quot;headerlink&quot; title=&quot;一、一级大标题的使用&quot;&gt;&lt;/a&gt;一、一级大标题的使用&lt;/h2&gt;&lt;p&gt;标题是比较常用的到的格式，只需要在标题前加上一个‘#’即可&lt;/p&gt;</summary>
    
    
    
    
    <category term="技术" scheme="http://example.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
