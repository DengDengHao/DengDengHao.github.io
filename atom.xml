<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-20T16:50:38.413Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8月20日学习总结</title>
    <link href="http://example.com/2021/08/21/8%E6%9C%8820%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/21/8%E6%9C%8820%E6%97%A5%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-20T16:19:20.000Z</published>
    <updated>2021-08-20T16:50:38.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日总结"><a href="#今日总结" class="headerlink" title="今日总结"></a>今日总结</h2><h3 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h3><span id="more"></span><p>复习了行列式以及矩阵逆矩阵的定义以及计算，熟悉了行列式各种形式的计算方法，还有矩阵逆矩阵的求法。<br>矩阵开始就会有很多的公式需要记忆，重点是围绕逆矩阵展开，例如求逆矩阵可以使用“伴随矩阵法“、”初等变换矩阵法“，然后伴随矩阵和矩阵以及矩阵的逆矩阵还有矩阵的行列式有大量的公式和定理定义。如：一个数乘上一个n阶矩阵等于一个数的n次方乘以他的行列式，<code>A*/|A|=A^-1</code>(很重要)等等。都需要练习还有背诵去加深印象。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>今天翻译了一篇文章，虽然文章不难，但是搞懂了所有单词意思，能够翻译出全文的大致意思。<br>重点单词：<br>entile、instinct、zeal、subsidise、indulgent、preside、prescription、prescribe、negligible、initiate、ingenious、eligible</p><p>单词不多，也不难，但都是基础单词，需要记忆</p><h3 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h3><p>今天学习了操作系统的I/O系统，I/O设备的分类，依靠各种特性的分类，I/O控制器的组成还有原理，纯记忆还有理解背诵即可。<br>还有I/O系统的控制方式，比较重要。</p><ol><li>程序直接控制方式：CPU发出一条I/O指令后，等待该条指令完成后再执行其他操作，以单个字为操作单位，CPU干预程度极高，且大部分时间处在忙等状态，效率极低。</li><li>中断驱动方式：与上面不同的是，引入了中断机制，发出I/O指令后可以去干其他事，等到完成后会向CPU发出中断指令，但还是以单个字为操作对象，干预程度也很高。</li><li>DMA：加入DMA控制器，CPU只需要将本次I/O要干的事一件一件告诉DMA控制器（本质是将信息放入DMA中的寄存器中）,然后CPU就可以去干其他事了，等待完成后，会向CPU发出中断，CPU干预程度又一次下降，并且可以一次性读多个字，以块为单位与CPU交换数据。</li><li>通道控制：通道就是一个低配版CPU，但是还是要与CPU共享内存。当CPU要执行I/O操作时，只需要从内存中调出通道程序，通道程序会去让通道完成所有的I/O操作，CPU就更少干预了，并且可以以一组块为交换单位，效率更高。</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>今天中午出去陪家人吃了饭，导致下午效率有点低哈哈哈，明天继续努力啊，不管是学习考研还是学习专业知识，都不要浪费自己的时间，将时间有意义化，毕竟我的差距和别人拉开的太大了，加油吧。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;今日总结&quot;&gt;&lt;a href=&quot;#今日总结&quot; class=&quot;headerlink&quot; title=&quot;今日总结&quot;&gt;&lt;/a&gt;今日总结&lt;/h2&gt;&lt;h3 id=&quot;高数&quot;&gt;&lt;a href=&quot;#高数&quot; class=&quot;headerlink&quot; title=&quot;高数&quot;&gt;&lt;/a&gt;高数&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>学习Markdown语法的练习博客</title>
    <link href="http://example.com/2021/08/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2021/08/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</id>
    <published>2021-08-19T15:07:09.000Z</published>
    <updated>2021-08-20T16:18:31.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、一级大标题的使用"><a href="#一、一级大标题的使用" class="headerlink" title="一、一级大标题的使用"></a>一、一级大标题的使用</h2><p>标题是比较常用的到的格式，只需要在标题前加上一个‘#’即可</p><span id="more"></span><hr><h2 id="二、字体加粗"><a href="#二、字体加粗" class="headerlink" title="二、字体加粗"></a>二、字体加粗</h2><p>在需要加粗的字体前后加上就像这样</p><hr><h2 id="三、代码块的使用"><a href="#三、代码块的使用" class="headerlink" title="三、代码块的使用"></a>三、代码块的使用</h2><p>在代码前后加上```就可以实现代码块；如果不适用代码块，直接贴代码就有如下的效果<br>#include &lt;stdio.h&gt;</p><p>int main()<br>{<br>    /* 我的第一个 C 程序 */<br>    printf(“Hello, World! \n”);<br>    return 0;<br>}<br>但是如果使用代码块，就能将代码标亮并且有行数提示，更加美观，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    /* 我的第一个 C 程序 */</span><br><span class="line">    printf(“Hello, World! \n”);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是行内代码块：用单个`表示<br><code>printf(“Hello, World! \n”);</code></p><hr><h2 id="四、文字引用"><a href="#四、文字引用" class="headerlink" title="四、文字引用"></a>四、文字引用</h2><p>分层结构可以使文字结构更加清晰明了</p><blockquote><p>我是一层</p><blockquote><p>我是二层<br>就算这里继续使用一个箭头还是无法跳出第二层的</p><blockquote><p>我是第三层</p></blockquote></blockquote></blockquote><blockquote><p>空一行就可以跳出之前的层数</p></blockquote><hr><h2 id="五、表格"><a href="#五、表格" class="headerlink" title="五、表格"></a>五、表格</h2><p>第二行的符号-表示对齐方式,-表示默认，-–:表示右对齐，\：—表示左对齐.注意表格前一定要空行！！！不然无法识别</p><table><thead><tr><th>商品</th><th align="right">数量</th><th align="center">单价</th></tr></thead><tbody><tr><td>苹果</td><td align="right">10</td><td align="center">$1</td></tr><tr><td>电脑</td><td align="right">1</td><td align="center">$1000</td></tr></tbody></table><hr><h2 id="六、有序列表"><a href="#六、有序列表" class="headerlink" title="六、有序列表"></a>六、有序列表</h2><p>在数字.后面加上空格既可以生成有序列表</p><hr><h2 id="N、总结（FOR-NOW…）"><a href="#N、总结（FOR-NOW…）" class="headerlink" title="N、总结（FOR NOW…）"></a>N、总结（FOR NOW…）</h2><p>还有很多Markdown语法，但是由于学习时间有限，先学习到这里，等后续继续学习了还会在这里补充。<br>现在对今天所学进行总结：</p><ol><li>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式，可以很容易转化成 HTML 或者 PDF！</li><li>很多格式后面要注意空格空行，不然无法识别出来，如##、以及有序列表（空格），分割线—（空行）</li><li>如果你想在文字中加入一些语法符号，可以写在前面加上\，即可转义****</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;一、一级大标题的使用&quot;&gt;&lt;a href=&quot;#一、一级大标题的使用&quot; class=&quot;headerlink&quot; title=&quot;一、一级大标题的使用&quot;&gt;&lt;/a&gt;一、一级大标题的使用&lt;/h2&gt;&lt;p&gt;标题是比较常用的到的格式，只需要在标题前加上一个‘#’即可&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/08/16/hello-world/"/>
    <id>http://example.com/2021/08/16/hello-world/</id>
    <published>2021-08-16T09:16:25.868Z</published>
    <updated>2021-08-16T09:16:25.869Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
